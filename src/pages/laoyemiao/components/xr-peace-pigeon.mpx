<template>
  <xr-scene ar-system="modes:Plane" bind:ready="handleReady" bind:tick="handleTick">
    <xr-assets bind:loaded="handleAssetsLoaded">
      <xr-asset-load
        type="gltf"
        asset-id="anchor"
        src="https://mmbizwxaminiprogram-1258344707.cos.ap-guangzhou.myqcloud.com/xr-frame/demo/ar-plane-marker.glb"
      />
      <xr-asset-load
        type="gltf"
        asset-id="miku"
        src="https://mmbizwxaminiprogram-1258344707.cos.ap-guangzhou.myqcloud.com/xr-frame/demo/miku.glb"
      />
    </xr-assets>

    <xr-env env-data="xr-frame-team-workspace-day" />
    <xr-light type="ambient" color="1 1 1" intensity="1" />
    <xr-light type="directional" rotation="40 70 0" color="1 1 1" intensity="3" cast-shadow />

    <xr-ar-tracker mode="Plane">
      <xr-gltf model="anchor"></xr-gltf>
    </xr-ar-tracker>
    <xr-node node-id="setitem" visible="false">
      <xr-gltf
        model="miku"
        anim-autoplay
        scale="0.08 0.08 0.08"
        rotation="0 180 0"
        mesh-shape
        id="mikukuku"
        bind:touch-shape="handleTouchModel"
      />
    </xr-node>

    <xr-camera clear-color="0.4 0.8 0.6 1" background="ar" is-ar-camera />
  </xr-scene>
</template>

<script>
  import { createComponent } from '@mpxjs/core'

  createComponent({
    data: {},
    methods: {
      handleReady: function ({ detail }) {
        this.scene = detail.value
      },
      handleTick ({ detail }) {
        // this.triggerEvent('confirmHandle', true)
      },
      handleAssetsLoaded: function ({ detail }) {
        wx.showToast({ title: '点击屏幕放置' })
        this.scene.event.add('touchstart', () => {
          this.scene.ar.placeHere('setitem', true)
        })
      },
      handleTouchModel: function ({ detail }) {
        // const { target } = detail.value
        let self = this
        wx.showModal({
          title: '崇宁镇老爷庙是渭华起义发祥地，想听听渭华起义的更多历史吗？',
          // content: '这是一个模态弹窗',
          success (res) {
            if (res.confirm) {
              self.triggerEvent('confirmHandle', true)
            } else if (res.cancel) {
              self.triggerEvent('cancelHandle', true)
            }
          }
        })
      }
    }
  })
</script>

<style lang="stylus"></style>

<script type="application/json">
  {
    "component": true,
    "renderer": "xr-frame"
  }
</script>
